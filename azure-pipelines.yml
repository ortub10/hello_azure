# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
      - feature 

pool:
  name: githubAgent

variables:
  Major: "1"
  Minor: "0"
  Patch: $(Build.BuildId)
  buildVersion: "$(Major).$(Minor).$(Patch)"  
  

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: UseJavaToolInstaller@1
  inputs:
    versionSpec: '11'  
    jdkArchitecture: 'x64'

- script: |
    dotnet build --configuration Release
  displayName: 'Build the project'
  
  
- task: SonarQubePrepare@6
  condition: eq(variables['Build.SourceBranch'], 'feature')  
  inputs:
    SonarQube: 'SonarQubeConnection'  
    scannerMode: 'MSBuild'
    projectKey: 'azure'  
    projectName: 'azure'
   

- task: SonarQubeAnalyze@6
  condition: eq(variables['Build.SourceBranch'], 'feature')
  inputs:
    SonarQube: 'SonarQubeConnection'

- task: SonarQubePublish@6
  condition: eq(variables['Build.SourceBranch'], 'feature')
  inputs:
    SonarQube: 'SonarQubeConnection'
    pollingTimeoutSec: '300'



- task: DotNetCoreCLI@2
  condition: eq(variables['Build.SourceBranchName'], 'feature')
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'  
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'buildVersion' 
  #  outputDir: '$(Build.ArtifactStagingDirectory)'
  #  arguments: 'p:PackageId=$(Build.SourceBranchName)_$(buildVersion)'


- task: DotNetCoreCLI@2
  condition: eq(variables['Build.SourceBranchName'], 'feature')
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    
    
    
- script: |
    echo "Version: $(buildVersion)"
  displayName: "Print Version to Console"    


- task: DotNetCoreCLI@2
  condition: eq(variables['Build.SourceBranchName'], 'feature')
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'b1fdba62-71d1-4e08-8819-7560108d13fb/003c6320-d931-4821-8436-7ef7094cb2fc'
    arguments: '--skip-duplicate'

